spring:
  config:
    import:
      - optional:file:env/test-db.env[.properties]
      - optional:file:env/video.env[.properties]
      - optional:file:env/secret-key.env[.properties]
  redis:
    host: ${REDIS_HOST}
    port: ${REDIS_PORT}

  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: ${MYSQL_TEST_URL}
    username: ${MYSQL_TEST_USERNAME}
    password: ${MYSQL_TEST_PASSWORD}

  jpa:
    database: mysql
    database-platform: org.hibernate.dialect.MySQL8Dialect
    open-in-view: false
    properties:
      hibernate:
        format_sql: true
      show-sql: true
    hibernate:
      ddl-auto: create
  security:
    oauth2:
      client:
        provider:
          kakao:
            authorization-uri: ${KAKAO_AUTHORIZATION_URI}
            token-uri: ${KAKAO_TOKEN_URI}
            user-info-uri: ${KAKAO_USER_INFO_URI}
            user-name-attribute: ${KAKAO_USER_NAME_ATTRIBUTE}
          naver:
            authorization-uri: ${NAVER_AUTHORIZATION_URI}
            token-uri: ${NAVER_TOKEN_URI}
            user-info-uri: ${NAVER_USER_INFO_URI}
            user-name-attribute: ${NAVER_USER_NAME_ATTRIBUTE}
        registration:
          kakao:
            client-id: ${KAKAO_CLIENT_ID}
            client-secret: ${KAKAO_CLIENT_SECRET}
            redirect-uri: ${KAKAO_REDIRECT_URI}
            scope: ${KAKAO_SCOPE}
            client-name: ${KAKAO_CLIENT_NAME}
            authorization-grant-type: ${KAKAO_AUTHORIZATION_GRANT_TYPE}
            client-authentication-method: ${KAKAO_CLIENT_AUTHENTICATION_METHOD}
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
            scope: ${GOOGLE_SCOPE}
          naver:
            client-id: ${NAVER_CLIENT_ID}
            client-secret: ${NAVER_CLIENT_SECRET}
            redirect-uri: ${NAVER_SCOPE}
            scope: ${NAVER_SCOPE}
            client-name: ${NAVER_CLIENT_NAME}
            authorization-grant-type: ${NAVER_AUTHORIZATION_GRANT_TYPE}

dotori:
  domain: ${DOTORI_DOMAIN}

jwt:
  secretKey: ${SECRET_KEY}
  access:
    expiration: ${ACCESS_EXPIRATION}
    header: ${ACCESS_HEADER}
  refresh:
    expiration: ${REFRESH_EXPIRATION}
    header: ${REFRESH_HEADER}

videos:
  path:
    video: ${VIDEO_DIRECTORY_PATH}
    scene: ${SCENE_DIRECTORY_PATH}
    chunk: ${CHUNK_DIRECTORY_PATH}